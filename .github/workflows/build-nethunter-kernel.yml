name: Build NetHunter Kernel

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kernel source
        uses: actions/checkout@v4   # v3 deprecated হয়ে গেছে, তাই v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git wget curl unzip bc bison flex build-essential \
            libssl-dev libncurses5-dev libncursesw5-dev \
            ccache python3 python3-pip zip

      - name: Clone NetHunter kernel builder
        run: git clone https://gitlab.com/kalilinux/nethunter/build-scripts/kali-nethunter-kernel-builder.git builder

      - name: Apply NetHunter patches (auto, non-interactive)
        run: |
          cd builder
          chmod +x kernel-builder.sh
          echo "4" | ./kernel-builder.sh ../   # "4" মানে patch apply

      - name: Setup clang (toolchain)
        run: |
          mkdir -p toolchains
          cd toolchains
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 clang
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 gcc64
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 gcc32

      - name: Export environment
        run: |
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "SUBARCH=arm64" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-linux-android-" >> $GITHUB_ENV
          echo "CROSS_COMPILE_ARM32=arm-linux-androideabi-" >> $GITHUB_ENV
          echo "PATH=$GITHUB_WORKSPACE/toolchains/clang/clang-r450784d/bin:$GITHUB_WORKSPACE/toolchains/gcc64/bin:$GITHUB_WORKSPACE/toolchains/gcc32/bin:$PATH" >> $GITHUB_ENV

      - name: Build kernel
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export PATH=$GITHUB_WORKSPACE/toolchains/clang/clang-r450784d/bin:$GITHUB_WORKSPACE/toolchains/gcc64/bin:$GITHUB_WORKSPACE/toolchains/gcc32/bin:$PATH
          make O=out ARCH=arm64 vendor/sunny_defconfig
          make -j$(nproc) O=out ARCH=arm64 \
            CC=clang \
            CROSS_COMPILE=aarch64-linux-android- \
            CROSS_COMPILE_ARM32=arm-linux-androideabi-

      - name: Package AnyKernel3
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git -b master AnyKernel
          cp out/arch/arm64/boot/Image.gz-dtb AnyKernel/
          cd AnyKernel
          zip -r9 ../NetHunter-Kernel.zip *

      - name: Upload Kernel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: NetHunter-Kernel
          path: NetHunter-Kernel.zip
