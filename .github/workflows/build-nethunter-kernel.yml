name: Build NetHunter Kernel

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget curl unzip bc bison flex build-essential \
            libssl-dev libncurses5-dev libncursesw5-dev ccache python3 python3-pip zip \
            binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi

      - name: Clone NetHunter patches
        run: git clone https://gitlab.com/kalilinux/nethunter/build-scripts/kali-nethunter-kernel-builder.git builder

      - name: Apply NetHunter patches
        run: |
          cd kernel-lts-4.14.356-openela-rc1
          PATCH_DIR=$GITHUB_WORKSPACE/builder/patches/4.14
          if [ -d "$PATCH_DIR" ]; then
            for patch in $PATCH_DIR/*.patch; do
              if [ -f "$patch" ]; then
                git apply --ignore-whitespace "$patch" || exit 1
              fi
            done
          fi

      - name: Setup toolchains
        run: |
          mkdir -p toolchains
          cd toolchains
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 clang
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 gcc64
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 gcc32

      - name: Export environment
        run: |
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "SUBARCH=arm64" >> $GITHUB_ENV
          echo "CROSS_COMPILE=$GITHUB_WORKSPACE/toolchains/gcc64/bin/aarch64-linux-android-" >> $GITHUB_ENV
          echo "CROSS_COMPILE_ARM32=$GITHUB_WORKSPACE/toolchains/gcc32/bin/arm-linux-androideabi-" >> $GITHUB_ENV
          echo "PATH=$GITHUB_WORKSPACE/toolchains/clang/clang-r450784d/bin:$GITHUB_WORKSPACE/toolchains/gcc64/bin:$GITHUB_WORKSPACE/toolchains/gcc32/bin:$PATH" >> $GITHUB_ENV

      - name: Build kernel
        run: |
          cd kernel-lts-4.14.356-openela-rc1
          export PATH=$GITHUB_WORKSPACE/toolchains/clang/clang-r450784d/bin:$GITHUB_WORKSPACE/toolchains/gcc64/bin:$GITHUB_WORKSPACE/toolchains/gcc32/bin:$PATH
          make O=out ARCH=arm64 defconfig
          make -j$(nproc) O=out ARCH=arm64 CC=clang LLVM=1 LLVM_IAS=1

      - name: Package AnyKernel3
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git -b master AnyKernel
          cp kernel-lts-4.14.356-openela-rc1/out/arch/arm64/boot/Image.gz-dtb AnyKernel/ || exit 1
          cd AnyKernel
          zip -r9 ../NetHunter-Kernel.zip *

      - name: Upload Kernel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: NetHunter-Kernel
          path: NetHunter-Kernel.zip
